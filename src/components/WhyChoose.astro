---
export interface Props {
  section?: {
    heading?: string;
    sub?: string;
    items?: Array<{ title: string; desc: string }>;
  };
  locale?: string;
}

const { section = {} } = Astro.props;

// Safe fallback content
const list = Array.isArray(section.items) && section.items.length ? section.items : [
  { title: "Huge selection", desc: "Thousands of restaurants, groceries, and shops." },
  { title: "Fast & reliable", desc: "Optimized routes and trusted couriers." },
  { title: "Clear pricing", desc: "No surprisesâ€”upfront fees and promos." },
  { title: "Dedicated support", desc: "Real people ready to help." }
];

// Icon mapping for why choose items
const getIcon = (title: string) => {
  const iconMap: Record<string, string> = {
    "Huge selection": "M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10",
    "Fast & reliable": "M13 10V3L4 14h7v7l9-11h-7z",
    "Clear pricing": "M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z",
    "Dedicated support": "M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 2.25a9.75 9.75 0 100 19.5 9.75 9.75 0 000-19.5z"
  };
  return iconMap[title] || iconMap["Huge selection"];
};
---

<section class="container mx-auto px-4 py-16 bg-white" data-stagger>
  <h2 class="text-3xl md:text-4xl font-extrabold text-center" data-anim="reveal-up">{section.heading || "Why Choose Toters?"}</h2>
  <p class="mt-2 text-slate-600 text-center max-w-2xl mx-auto" data-anim="reveal-up">{section.sub || "We're committed to the best delivery experience for everyone."}</p>
  <div class="mt-10 grid sm:grid-cols-2 lg:grid-cols-4 gap-6">
    {list.map((it) => (
      <div class="group rounded-2xl border border-slate-200 bg-white p-6 shadow-sm hover:shadow-md transition-all duration-300 hover:border-primary-200" data-anim="reveal">
        <!-- Icon -->
        <div class="w-12 h-12 bg-primary-100 rounded-xl flex items-center justify-center mb-4 group-hover:bg-primary-200 transition-colors duration-300">
          <svg class="w-6 h-6 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getIcon(it.title)} />
          </svg>
        </div>
        
        <!-- Content -->
        <h3 class="text-lg font-semibold text-gray-900 mb-2">{it.title}</h3>
        <p class="text-slate-600 text-sm leading-relaxed">{it.desc}</p>
      </div>
    ))}
  </div>
</section>
