---
/**
 * SSR shows the final (locale-formatted) number.
 * JS animates 0 -> final when available.
 */
const {
  value,                 // "1000000" | "1,000,000" | "12k" | "1.2m"
  format = "plain",      // "plain" | "kplus"
  dur = 1.2,
  className = "",
  id = "",
  lang = "en"
} = Astro.props;

function toLatin(s: string): string { 
  return s.replace(/[٠-٩]/g, (d: string) => String("٠١٢٣٤٥٦٧٨٩".indexOf(d))); 
}
function parseTarget(raw: string): number {
  const t = String(raw || "").trim().toLowerCase();
  const n = Number(t.replace(/[^\d.]/g, ""));
  if (t.endsWith("k")) return Math.round(n * 1_000);
  if (t.endsWith("m")) return Math.round(n * 1_000_000);
  if (t.endsWith("b")) return Math.round(n * 1_000_000_000);
  return Math.round(n);
}
function fmt(locale: string, n: number, kind: "plain" | "kplus"): string {
  if (kind === "kplus") {
    if (n >= 1_000_000_000) return `${Math.round(n / 1_000_000_000)}B+`;
    if (n >= 1_000_000)     return `${Math.round(n / 1_000_000)}M+`;
    if (n >= 1_000)         return `${Math.round(n / 1_000)}K+`;
  }
  return new Intl.NumberFormat(locale).format(n);
}
const end = parseTarget(value);
const locale = lang.startsWith("ar") ? "ar-LB" : "en-US";
const ssrText = fmt(locale, end, format);
---

<span id={id} class={`counter ${className}`} data-count={String(value)} data-count-dur={String(dur)} data-count-format={format} data-locale={locale} data-ssr="1">{ssrText}</span>