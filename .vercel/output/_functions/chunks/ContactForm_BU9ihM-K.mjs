import { e as createComponent, f as createAstro, r as renderTemplate, h as addAttribute, m as maybeRenderHead } from './astro/server_BaLT3vhi.mjs';
import 'kleur/colors';
import 'clsx';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro();
const $$ContactForm = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$ContactForm;
  const { t, lang = "en" } = Astro2.props;
  const rtl = lang.startsWith("ar");
  return renderTemplate(_a || (_a = __template(["", "<form", ' data-anim="reveal" id="contact-form" novalidate> <!-- honeypot --> <input type="text" name="company" autocomplete="off" tabindex="-1" class="hidden" aria-hidden="true"> <label class="block text-sm font-medium">', '</label> <input name="name" class="mt-1 w-full rounded-xl border p-3" required placeholder="Omar Abdelkader"> <label class="block text-sm font-medium mt-4">', '</label> <input name="email" type="email" class="mt-1 w-full rounded-xl border p-3" required placeholder="name@domain.com"> <label class="block text-sm font-medium mt-4">', '</label> <textarea name="message" rows="5" class="mt-1 w-full rounded-xl border p-3" required placeholder=""></textarea> <button class="btn btn-primary mt-6" type="submit" id="contact-submit" data-track="contact_submit"', "> ", ' </button> <p id="contact-status" class="mt-3 text-sm text-emerald-600 hidden">', '</p> <p id="contact-error" class="mt-3 text-sm text-red-600 hidden">', '</p> </form> <script type="module">\n  const form = document.getElementById("contact-form");\n  const submit = document.getElementById("contact-submit");\n  const ok = document.getElementById("contact-status");\n  const err = document.getElementById("contact-error");\n  const endpoint = "https://formspree.io/f/YOUR_FORM_ID"; // Will be replaced by Astro\n\n  function setVis(el, show){ el.classList.toggle("hidden", !show); }\n  function valEmail(s){ return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(s); }\n\n  form?.addEventListener("submit", async (e) => {\n    e.preventDefault();\n    setVis(ok, false); setVis(err, false);\n\n    const fd = new FormData(form);\n    if (fd.get("company")) { setVis(ok, true); return; } // honeypot trip: pretend ok\n\n    const name = String(fd.get("name")||"").trim();\n    const email = String(fd.get("email")||"").trim();\n    const message = String(fd.get("message")||"").trim();\n\n    if (!name || !email || !message) { setVis(err, true); err.textContent = "This field is required"; return; }\n    if (!valEmail(email)) { setVis(err, true); err.textContent = "Please enter a valid email"; return; }\n\n    submit.setAttribute("disabled","true"); submit.style.opacity = ".7";\n\n    try {\n      const res = await fetch(endpoint, {\n        method: "POST",\n        headers: { "Accept": "application/json" },\n        body: fd\n      });\n      if (res.ok) {\n        setVis(ok, true);\n        form.reset();\n        // Track success if consent granted\n        if (typeof window !== "undefined" && window.localStorage?.getItem("analytics_consent") === "granted") {\n          if (typeof window.gtag === "function") {\n            window.gtag("event", "contact_submit", { language: "<?=lang?>" });\n          }\n          if (typeof window.plausible === "function") {\n            window.plausible("contact_submit", { props: { language: "<?=lang?>" } });\n          }\n        }\n      } else {\n        setVis(err, true);\n        // Track failure if consent granted\n        if (typeof window !== "undefined" && window.localStorage?.getItem("analytics_consent") === "granted") {\n          if (typeof window.gtag === "function") {\n            window.gtag("event", "contact_submit_fail", { language: "<?=lang?>", error_code: res.status });\n          }\n          if (typeof window.plausible === "function") {\n            window.plausible("contact_submit_fail", { props: { language: "<?=lang?>", error_code: res.status } });\n          }\n        }\n      }\n    } catch (e) {\n      setVis(err, true);\n      // Track network error if consent granted\n      if (typeof window !== "undefined" && window.localStorage?.getItem("analytics_consent") === "granted") {\n        if (typeof window.gtag === "function") {\n          window.gtag("event", "contact_submit_fail", { language: "<?=lang?>", error_type: "network" });\n        }\n        if (typeof window.plausible === "function") {\n          window.plausible("contact_submit_fail", { props: { language: "<?=lang?>", error_type: "network" } });\n        }\n      }\n    } finally {\n      submit.removeAttribute("disabled"); submit.style.opacity = "1";\n    }\n  });\n</script>'], ["", "<form", ' data-anim="reveal" id="contact-form" novalidate> <!-- honeypot --> <input type="text" name="company" autocomplete="off" tabindex="-1" class="hidden" aria-hidden="true"> <label class="block text-sm font-medium">', '</label> <input name="name" class="mt-1 w-full rounded-xl border p-3" required placeholder="Omar Abdelkader"> <label class="block text-sm font-medium mt-4">', '</label> <input name="email" type="email" class="mt-1 w-full rounded-xl border p-3" required placeholder="name@domain.com"> <label class="block text-sm font-medium mt-4">', '</label> <textarea name="message" rows="5" class="mt-1 w-full rounded-xl border p-3" required placeholder=""></textarea> <button class="btn btn-primary mt-6" type="submit" id="contact-submit" data-track="contact_submit"', "> ", ' </button> <p id="contact-status" class="mt-3 text-sm text-emerald-600 hidden">', '</p> <p id="contact-error" class="mt-3 text-sm text-red-600 hidden">', '</p> </form> <script type="module">\n  const form = document.getElementById("contact-form");\n  const submit = document.getElementById("contact-submit");\n  const ok = document.getElementById("contact-status");\n  const err = document.getElementById("contact-error");\n  const endpoint = "https://formspree.io/f/YOUR_FORM_ID"; // Will be replaced by Astro\n\n  function setVis(el, show){ el.classList.toggle("hidden", !show); }\n  function valEmail(s){ return /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/.test(s); }\n\n  form?.addEventListener("submit", async (e) => {\n    e.preventDefault();\n    setVis(ok, false); setVis(err, false);\n\n    const fd = new FormData(form);\n    if (fd.get("company")) { setVis(ok, true); return; } // honeypot trip: pretend ok\n\n    const name = String(fd.get("name")||"").trim();\n    const email = String(fd.get("email")||"").trim();\n    const message = String(fd.get("message")||"").trim();\n\n    if (!name || !email || !message) { setVis(err, true); err.textContent = "This field is required"; return; }\n    if (!valEmail(email)) { setVis(err, true); err.textContent = "Please enter a valid email"; return; }\n\n    submit.setAttribute("disabled","true"); submit.style.opacity = ".7";\n\n    try {\n      const res = await fetch(endpoint, {\n        method: "POST",\n        headers: { "Accept": "application/json" },\n        body: fd\n      });\n      if (res.ok) {\n        setVis(ok, true);\n        form.reset();\n        // Track success if consent granted\n        if (typeof window !== "undefined" && window.localStorage?.getItem("analytics_consent") === "granted") {\n          if (typeof window.gtag === "function") {\n            window.gtag("event", "contact_submit", { language: "<?=lang?>" });\n          }\n          if (typeof window.plausible === "function") {\n            window.plausible("contact_submit", { props: { language: "<?=lang?>" } });\n          }\n        }\n      } else {\n        setVis(err, true);\n        // Track failure if consent granted\n        if (typeof window !== "undefined" && window.localStorage?.getItem("analytics_consent") === "granted") {\n          if (typeof window.gtag === "function") {\n            window.gtag("event", "contact_submit_fail", { language: "<?=lang?>", error_code: res.status });\n          }\n          if (typeof window.plausible === "function") {\n            window.plausible("contact_submit_fail", { props: { language: "<?=lang?>", error_code: res.status } });\n          }\n        }\n      }\n    } catch (e) {\n      setVis(err, true);\n      // Track network error if consent granted\n      if (typeof window !== "undefined" && window.localStorage?.getItem("analytics_consent") === "granted") {\n        if (typeof window.gtag === "function") {\n          window.gtag("event", "contact_submit_fail", { language: "<?=lang?>", error_type: "network" });\n        }\n        if (typeof window.plausible === "function") {\n          window.plausible("contact_submit_fail", { props: { language: "<?=lang?>", error_type: "network" } });\n        }\n      }\n    } finally {\n      submit.removeAttribute("disabled"); submit.style.opacity = "1";\n    }\n  });\n</script>'])), maybeRenderHead(), addAttribute(`max-w-2xl mx-auto ${rtl ? "text-right" : ""}`, "class"), t.name, t.email, t.message, addAttribute(lang, "data-label"), t.send, t.sent, t.error);
}, "C:/Users/Omar Abdelkader/Desktop/omar abdelkader/my_work/Toters_website/toters-site/src/components/ContactForm.astro", void 0);

export { $$ContactForm as $ };
